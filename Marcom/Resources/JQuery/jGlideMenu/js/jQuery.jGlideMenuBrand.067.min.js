jQuery.jGlideMenuBrand = { useDropShadow: new Boolean, useDragDrop: new Boolean, defaultScrollSpeed: new Number(0), defaultScrollBackSpeed: new Number(0), slideRight: new Boolean, useSmoothScrolling: new Boolean, easeFx: new String(""), closeLinkMarkUp: new String(""), menuShowFx: new String(""), menuHideFx: new String(""), tileWidth: new Number(0), tileInset: new Number(0), itemsToDisplay: new Number(8), useTileURL: new Boolean, tileSource: new String(""), URLParams: new Object, loadImage: new String(""), loadImageStyle: new Object, initialTile: new String(""), alertOnError: new Boolean, captureLinks: new Boolean, imagePath: new String, tileCount: new Number(0), animation: new Boolean, helperImage: new Boolean, currentElement: new Object, currentElementID: new String(""), hasDragDropSupport: new Boolean, hasShadowSupport: new Boolean, displayToggle: new Boolean, tileScrollPosition: new Array, smoothScrollTimer: new Array, mouseHover: new Boolean, demoMode: new Boolean, initialize: function (e) { return this.each(function () { jQuery.jGlideMenuBrand.animation = false; jQuery.jGlideMenuBrand.helperImage = false; jQuery.jGlideMenuBrand.hasDragDropSupport = false; jQuery.jGlideMenuBrand.hasShadowSupport = false; jQuery.jGlideMenuBrand.tileCount = 0; jQuery.jGlideMenuBrand.displayToggle = false; jQuery.jGlideMenuBrand.mouseHover = false; jQuery.jGlideMenuBrand.demoMode = false; jQuery.jGlideMenuBrand.currentElement = jQuery(this); if (this.id) jQuery.jGlideMenuBrand.currentElementID = this.id; var t = { itemsToDisplay: 12, tileInset: 7, tileWidth: 300, useDropShadow: false, slideRight: true, useDragDrop: true, useSmoothScrolling: true, useTileURL: false, defaultScrollSpeed: 750, defaultScrollBackSpeed: 800, tileSource: "myTiles", URLParams: {}, closeLinkMarkUp: "Close", menuShowFx: "fadeIn", menuHideFx: "fadeOut", easeFx: "linear", loadImage: "../../Resources/JQuery/jGlideMenu/img/ajax.gif", initialTile: "tile_011", alertOnError: false, captureLinks: true, loadImageStyle: { position: "absolute", bottom: "10px", left: "10px", "z-index": "999" }, imagePath: "../../Resources/JQuery/jGlideMenu/img/", demoMode: false }; if (e) jQuery.extend(t, e); jQuery.jGlideMenuBrand.checkFeatures(); if (t.closeLinkMarkUp.length < 1) t.closeLinkMarkUp = "x Close"; if (parseInt(t.itemsToDisplay) < 1) t.itemsToDisplay = 1; if (t.initialTile.length < 0) jQuery.jGlideMenuBrand.errorTrap("Invalid Configuration"); for (i in t) jQuery.jGlideMenuBrand[i] = t[i]; if (jQuery.jGlideMenuBrand.useTileURL == false && jQuery.jGlideMenuBrand.tileSource.length > 0) { jQuery(jQuery.jGlideMenuBrand.tileSource).css("display", "none"); jQuery(jQuery.jGlideMenuBrand.currentElement).children().not(jQuery.jGlideMenuBrand.tileSource).remove() } else jQuery(jQuery.jGlideMenuBrand.currentElement).html(""); jQuery(jQuery.jGlideMenuBrand.currentElement).append('<div class="jGMBrand_wrapper" id="jGMBrand_wrapper_' + this.id + '"></div>'); var n = document.createElement("img"); n.src = jQuery.jGlideMenuBrand.loadImage; n.style.display = "none"; n.id = "jGMBrand_helper" + jQuery.jGlideMenuBrand.currentElementID; jQuery(jQuery.jGlideMenuBrand.currentElement).append(n); jQuery("img#" + n.id).css(jQuery.jGlideMenuBrand.loadImageStyle); jQuery.jGlideMenuBrand.helperImage = true; if (jQuery.jGlideMenuBrand.hasDragDropSupport == true && jQuery.jGlideMenuBrand.useDragDrop == true) { if (jQuery.isFunction(jQuery("body").Draggable)) jQuery(this).Draggable({ handle: ".jGMBrand_header" }); else jQuery(this).draggable({ handle: ".jGMBrand_header" }) } if (jQuery.jGlideMenuBrand.hasShadowSupport == true && jQuery.jGlideMenuBrand.useDropShadow == true) { if (jQuery.isFunction(jQuery("body").dropShadow)) jQuery(this).dropShadow(); else jQuery(this).shadow({ color: "#cccccc" }) } jQuery(jQuery.jGlideMenuBrand.currentElement).find("div.jGMBrand_header a").bind("click", function () { if (jQuery.jGlideMenuBrand.displayToggle == true) return false; jQuery.jGlideMenuBrand.toggleDisplay(true); return false }); jQuery(this).hover(function () { jQuery.jGlideMenuBrand.mouseHover = true }, function () { jQuery.jGlideMenuBrand.mouseHover = false }); jQuery(document).keydown(function (e) { return true; var t = e.charCode ? e.charCode : e.keyCode ? e.keyCode : 0; if (t == 32 && jQuery.jGlideMenuBrand.mouseHover == false) { jQuery.jGlideMenuBrand.toggleDisplay(); return } if (jQuery.jGlideMenuBrand.mouseHover == false) return false; switch (t) { case 37: break; case 38: break; case 39: break; case 40: break; case 13: break; case 32: jQuery.jGlideMenuBrand.toggleDisplay(); return; break } }); jQuery.jGlideMenuBrand.loadTile(jQuery.jGlideMenuBrand.initialTile, jQuery.jGlideMenuBrand.URLParams) }) }, toggleDisplay: function (e) { jQuery.jGlideMenuBrand.displayToggle = true; jQuery.jGlideMenuBrand.mouseHover == false; if (jQuery(jQuery.jGlideMenuBrand.currentElement).css("display") == "block") var t = 0; else var t = 1; jQuery(jQuery.jGlideMenuBrand.currentElement).animate({ opacity: t }, "slow", function () { if (e == true) { jQuery.jGlideMenuBrand.scrollToTile(0, jQuery.jGlideMenuBrand.defaultScrollBackSpeed); jQuery.jGlideMenuBrand.tileScrollPosition[0] = 0 } if (t > 0) jQuery(this).css("display", "block"); else jQuery(this).css("display", "none"); jQuery.jGlideMenuBrand.displayToggle = false }) }, checkFeatures: function () { jQuery.jGlideMenuBrand.hasDragDropSupport = jQuery.isFunction(jQuery("body").Draggable); if (jQuery.jGlideMenuBrand.hasDragDropSupport == false) jQuery.jGlideMenuBrand.hasDragDropSupport = jQuery.isFunction(jQuery("body").draggable); jQuery.jGlideMenuBrand.hasShadowSupport = jQuery.isFunction(jQuery("body").dropShadow); if (jQuery.jGlideMenuBrand.hasShadowSupport == false) jQuery.jGlideMenuBrand.hasShadowSupport = jQuery.isFunction(jQuery("body").shadow); return }, parseURL: function (e) { if (!jQuery.browser.msie) { return e } if (e.indexOf("#tile_") < 0) { return e } var t = e.split("#"); return "#" + t[t.length - 1] }, countTiles: function () { jQuery.jGlideMenuBrand.tileCount = parseInt(jQuery("div.jGMBrand_tile").size()) }, loadTile: function (e, t) { var n = document.createElement("div"); var r = jQuery.jGlideMenuBrand.tileCount + 1; n.id = "jGMBrand_tile_" + jQuery.jGlideMenuBrand.currentElementID + "_" + r; if (jQuery.jGlideMenuBrand.slideRight == true) var i = jQuery.jGlideMenuBrand.tileWidth * jQuery.jGlideMenuBrand.tileCount + jQuery.jGlideMenuBrand.tileInset; else var i = jQuery.jGlideMenuBrand.tileWidth * jQuery.jGlideMenuBrand.tileCount * -1 + jQuery.jGlideMenuBrand.tileInset; jQuery("#jGMBrand_wrapper_" + jQuery.jGlideMenuBrand.currentElementID).append(n); jQuery("#" + n.id).addClass("jGMBrand_tile").css({ top: 0, left: i + "px", width: "300px", position: "absolute", overflow: "hidden", margin: 0, padding: 0, border: 0, display: "block" }); var s = '<div style="height:100%;margin:0;border:0;width:100%;padding:0;text-align:center;">' + "<h3>Missing Tile</h3><p>Unable to locate the requested Tile</p></div>"; if (jQuery.jGlideMenuBrand.useTileURL == false) { if (jQuery("ul#" + e).size() < 1) { jQuery.jGlideMenuBrand.errorTrap("Invalid Tile Request"); return false } var o = jQuery("ul#" + e).attr("title"); var u = jQuery("ul#" + e).attr("alt"); var a = jQuery("ul#" + e + " li").size(); var f = []; jQuery("ul#" + e + " li").each(function () { if (jQuery("a", this).size() > 0) f[f.length] = [jQuery("a", this).attr("href"), jQuery("a", this).text(), 1]; else f[f.length] = [jQuery(this).attr("rel"), jQuery(this).text(), 0] }); var s = jQuery.jGlideMenuBrand.buildTile(o, u, f) } else { if (jQuery.jGlideMenuBrand.tileSource.length < 1) { jQuery.jGlideMenuBrand.errorTrap("Invalid AJAX Request"); return false } var l = "img#jGMBrand_helper" + jQuery.jGlideMenuBrand.currentElementID; jQuery(l).ajaxStart(function () { jQuery(this).animate({ opacity: "show" }, "fast") }).ajaxStop(function () { jQuery(this).animate({ opacity: "hide" }, "slow") }); t.tile = e; jQuery.ajax({ type: "POST", url: jQuery.jGlideMenuBrand.tileSource, data: t, async: false, success: function (n) { jQuery("body").append('<div id="jGMBrand_temp_' + jQuery.jGlideMenuBrand.currentElementID + t.tile + '" style="display:none;">' + n + "</div>"); if (jQuery("#jGMBrand_temp_" + jQuery.jGlideMenuBrand.currentElementID + t.tile + " ul#" + e).size() < 1) { jQuery.jGlideMenuBrand.errorTrap("AJAX: Invalid Tile Request"); return false } var r = jQuery("#jGMBrand_temp_" + jQuery.jGlideMenuBrand.currentElementID + t.tile + " ul#" + e).attr("title"); var i = jQuery("#jGMBrand_temp_" + jQuery.jGlideMenuBrand.currentElementID + t.tile + " ul#" + e).attr("alt"); var o = jQuery("#jGMBrand_temp_" + jQuery.jGlideMenuBrand.currentElementID + t.tile + " ul#" + e + " li").size(); var u = []; jQuery("#jGMBrand_temp_" + jQuery.jGlideMenuBrand.currentElementID + t.tile + " ul#" + e + " li").each(function () { if (jQuery("a", this).size() > 0) u[u.length] = [jQuery("a", this).attr("href"), jQuery("a", this).text(), 1]; else u[u.length] = [jQuery(this).attr("rel"), jQuery(this).text(), 0] }); jQuery("#jGMBrand_temp_" + jQuery.jGlideMenuBrand.currentElementID + t.tile).remove(); s = jQuery.jGlideMenuBrand.buildTile(r, i, u); jQuery(l).ajaxStart(function () { }).ajaxStop(function () { }) }, error: function (e) { jQuery.jGlideMenuBrand.errorTrap("Invalid AJAX Tile Request"); jQuery(l).ajaxStart(function () { }).ajaxStop(function () { }) } }) } jQuery("#" + n.id).html(s); jQuery("#" + n.id + " div.jGMBrand_content a").bind("click", function () { var e = ""; e = jQuery.jGlideMenuBrand.parseURL(jQuery(this).attr("href")); if (e.length < 1) { return false } if (e.substr(0, 1) == "#") { if (jQuery.jGlideMenuBrand.animation == true) return false; var t = e.substr(1, e.length - 1); jQuery.jGlideMenuBrand.loadTile(t, jQuery.jGlideMenuBrand.URLParams); return false } else { if (jQuery.jGlideMenuBrand.demoMode) { alert("Navigation Requestion: " + e) } else { window.location.href = e } if (jQuery.jGlideMenuBrand.captureLinks == true) return false } return true }); jQuery.jGlideMenuBrand.countTiles(); if (jQuery.jGlideMenuBrand.tileCount > 1) { jQuery("#" + n.id).append('<div class="jGMBrand_back"><a href="#">&laquo; Back</a></div>'); jQuery("#" + n.id + " div.jGMBrand_back").bind("click", function () { if (jQuery.jGlideMenuBrand.animation == true) return false; jQuery.jGlideMenuBrand.scrollToTile(r - 1, jQuery.jGlideMenuBrand.defaultScrollBackSpeed); return false }); if (jQuery.jGlideMenuBrand.tileCount > 2) { jQuery("#" + n.id).append('<div class="jGMBrand_reset"><a href="#">&laquo; Home</a></div>'); jQuery("#" + n.id + " div.jGMBrand_reset").bind("click", function () { if (jQuery.jGlideMenuBrand.animation == true) return false; jQuery.jGlideMenuBrand.scrollToTile(1, jQuery.jGlideMenuBrand.defaultScrollBackSpeed); return false }) } } jQuery.jGlideMenuBrand.tileScrollPosition[r] = 0; jQuery.jGlideMenuBrand.drawPagers(n.id, jQuery("#" + n.id + " .jGMBrand_content a").size()); if (jQuery.jGlideMenuBrand.useSmoothScrolling == false) { jQuery("#" + n.id + " .jGMBrand_pager a").click(function () { var e = 1; if (jQuery(this).attr("rel") == "Up") e = 0; jQuery.jGlideMenuBrand.scrollItems(e) }) } else { jQuery("#" + n.id + " .jGMBrand_pager a").hover(function () { var e = 1; if (jQuery(this).attr("rel") == "Up") e = 0; jQuery.jGlideMenuBrand.smoothScrollTimer[jQuery.jGlideMenuBrand.tileCount] = window.setInterval("jQuery.jGlideMenuBrand.scrollItems(" + e + ")", 250) }, function () { window.clearInterval(jQuery.jGlideMenuBrand.smoothScrollTimer[jQuery.jGlideMenuBrand.tileCount]) }) } jQuery.jGlideMenuBrand.scrollToTile(r, jQuery.jGlideMenuBrand.defaultScrollSpeed) }, scrollItems: function (e) { var t = "#jGMBrand_tile_" + jQuery.jGlideMenuBrand.currentElementID + "_" + jQuery.jGlideMenuBrand.tileCount; var n = jQuery(t + " .jGMBrand_content a"); var r = jQuery.jGlideMenuBrand.tileScrollPosition[jQuery.jGlideMenuBrand.tileCount]; if (r <= 0 && e == 0) return; if (r + jQuery.jGlideMenuBrand.itemsToDisplay - 2 >= jQuery(n).size() && e == 1) return; if (e == 0) jQuery.jGlideMenuBrand.tileScrollPosition[jQuery.jGlideMenuBrand.tileCount]--; else jQuery.jGlideMenuBrand.tileScrollPosition[jQuery.jGlideMenuBrand.tileCount]++; jQuery(n).show(); jQuery(t + " .jGMBrand_content").children("a:lt(" + jQuery.jGlideMenuBrand.tileScrollPosition[jQuery.jGlideMenuBrand.tileCount] + ")").hide(); jQuery.jGlideMenuBrand.drawPagers(t.substr(1, t.length), jQuery(n).size()) }, drawPagers: function (e, t) { jQuery("#" + e + " .jGMBrand_pager").find("a").each(function () { if (jQuery(this).attr("rel") == "Up") { if (jQuery.jGlideMenuBrand.tileScrollPosition[jQuery.jGlideMenuBrand.tileCount] > 0) jQuery(this).css("display", "block"); else jQuery(this).css("display", "none") } else { if (jQuery.jGlideMenuBrand.tileScrollPosition[jQuery.jGlideMenuBrand.tileCount] + jQuery.jGlideMenuBrand.itemsToDisplay - 2 < jQuery("#" + e + " .jGMBrand_content a").size()) jQuery(this).css("display", "block"); else jQuery(this).css("display", "none") } }) }, cleanTiles: function (e) { var t = e + 1; var n = jQuery.jGlideMenuBrand.tileCount; if (e >= n) return false; for (var r = t; r <= n; r++) { jQuery("#jGMBrand_tile_" + jQuery.jGlideMenuBrand.currentElementID + "_" + r).remove(); jQuery.jGlideMenuBrand.tileScrollPosition[r] = 0 } jQuery.jGlideMenuBrand.countTiles(); return }, scrollToTile: function (e, t) { jQuery.jGlideMenuBrand.countTiles(); var n = jQuery.jGlideMenuBrand.tileCount; if (e > n) e = n; if (e < 1) e = 1; if (!t) t = jQuery.jGlideMenuBrand.defaultScrollSpeed; var r = jQuery.jGlideMenuBrand.tileWidth * e - jQuery.jGlideMenuBrand.tileWidth; var i = jQuery.jGlideMenuBrand.slideRight == true ? r * -1 : r; jQuery.jGlideMenuBrand.animation = true; jQuery("div#jGMBrand_wrapper_" + jQuery.jGlideMenuBrand.currentElementID).animate({ left: i }, t, jQuery.jGlideMenuBrand.easeFx, function () { if (e < n) jQuery.jGlideMenuBrand.cleanTiles(e); if (i != 0) i += "px"; jQuery(this).css({ left: i }); jQuery.jGlideMenuBrand.animation = false }) }, buildTile: function (e, t, n) { if (jQuery.jGlideMenuBrand.imagePath.length > 1 && jQuery.jGlideMenuBrand.imagePath.substr(-1, 1) != "/") jQuery.jGlideMenuBrand.imagePath += "/"; var r = new String(""); r = '<div class="jGMBrand_cats"><img src=' + e + '><p class="jGMBrand_desc">' + t + "</p></div>"; r += '<div class="jGMBrand_pager"><a href="#" rel="Up" title="Scroll Up" style="display:none"><span>More</span></a></div>'; r += '<div class="jGMBrand_content">'; for (var i = 0; i < n.length; i++) { var s = n[i][2] == 1 ? "" : "#"; var o = n[i][2] == 1 ? "" : ' class="jGMBrand_more"'; r += '<a href="' + s + n[i][0] + '"' + o + ">" + n[i][1] + "</a>" } r += "</div>"; r += '<div class="jGMBrand_pager"><a href="#" rel="Down" title="Scroll Down" style="display:none"><span>More</span></a></div>'; return r }, errorTrap: function (e) { if (jQuery.jGlideMenuBrand.alertOnError == true) alert(e); return } }; jQuery.fn.jGlideMenuBrand = jQuery.jGlideMenuBrand.initialize; jQuery.fn.jGlideMenuBrandToggle = jQuery.jGlideMenuBrand.toggleDisplay; jQuery.fn.reverseBrand = function () { return this.pushStack(this.get().reverse(), arguments) }